#######################################################################
# AMS ADVANTAGE 3 Log4J Application Logging Configuration File
#######################################################################

#######################################################################
# Sets root category priority and its appenders to stderr
#######################################################################
log4j.rootLogger=ERROR, stderr

#######################################################################
# Sets the logging priority for the ADVANTAGE root logger
#######################################################################
#log4j.logger.ADV=ERROR, stderr
#log4j.additivity.ADV=false

#######################################################################
# Optionally, set other logging configurations for loggers
# at the functional area or class level, depending on the
# LoggingConfigLevel set in the application config options.
# More than one configuration can exist at a time.
#
# Examples:
#
# This logger configuration will log all INFO and higher level messages
# for all objects belonging to the functional area Security
# to the appender stderr. The second line indicates only to use the
# logger/appender(s) assigned at this level and not an ancestor's.
#   log4j.logger.ADV.Security=INFO, stderr
#   log4j.additivity.ADV.Security=false
#
# This logger configuration will log all DEBUG and higher level messages
# only for the object advantage.AMSDocHeader belonging to the functional area
# DocProcessing to the appender stderr
#   log4j.logger.ADV.DocProc.advantage.AMSDocHeader=DEBUG, stderr
#######################################################################
##
## Add your logging configuration here
##
#log4j.logger.ADV.Security=DEBUG, stderr
#log4j.additivity.ADV.Security=false
#
#log4j.logger.ADV.CodeLogging=DEBUG, stderr
#log4j.additivity.ADV.CodeLogging=false
#
#log4j.logger.ADV.Audit=DEBUG, stderr
#log4j.additivity.ADV.Audit=false
#
#log4j.logger.ADV.CVL=DEBUG, stderr
#log4j.additivity.ADV.CVL=false
#
#log4j.logger.ADV.DocProc=DEBUG, stderr
#log4j.additivity.ADV.DocProc=false
#
#log4j.logger.ADV.ErrorServices=DEBUG, stderr
#log4j.additivity.ADV.ErrorServices=false
#
#log4j.logger.ADV.FormsPrinting=DEBUG, stderr
#log4j.additivity.ADV.FormsPrinting=false
#
#log4j.logger.ADV.JobFramework=DEBUG, stderr
#log4j.additivity.ADV.JobFramework=false
#
#log4j.logger.ADV.Posting=DEBUG, stderr
#log4j.additivity.ADV.Posting=false
#
#log4j.logger.ADV.JobManClient=DEBUG, stderr
#log4j.additivity.ADV.JobManClient=false
#
#log4j.logger.ADV.MRT=DEBUG, stderr
#log4j.additivity.ADV.MRT=false
#
#log4j.logger.ADV.Navigation=DEBUG, stderr
#log4j.additivity.ADV.Navigation=false
#
#log4j.logger.ADV.PLSServices=DEBUG, stderr
#log4j.additivity.ADV.PLSServices=false
#
#log4j.logger.ADV.Prototype=DEBUG, stderr
#log4j.additivity.ADV.Prototype=false
#
#log4j.logger.ADV.ReportFramework=DEBUG, stderr
#log4j.additivity.ADV.ReportFramework=false
#
#log4j.logger.ADV.SysStateMaint=DEBUG, stderr
#log4j.additivity.ADV.SysStateMaint=false
#
#log4j.logger.ADV.VLSServices=DEBUG, stderr
#log4j.additivity.ADV.VLSServices=false
#
#log4j.logger.ADV.Workflow=DEBUG, stderr
#log4j.additivity.ADV.Workflow=false
#
#log4j.logger.ADV.XDA=DEBUG, stderr
#log4j.additivity.ADV.XDA=false

#log4j.logger.ADV.FormsAssembly=DEBUG, stderr
#log4j.additivity.ADV.FormsAssembly=false

#log4j.logger.ADV.F2I=DEBUG, stderr
#log4j.additivity.ADV.F2I=false

#log4j.logger.ADV.FMS2BUFR=DEBUG, stderr
#log4j.additivity.ADV.FMS2BUFR=false

#log4j.logger.ADV.FMI=DEBUG, stderr
#log4j.additivity.ADV.FMI=false

#log4j.logger.FMI=DEBUG, stderr
#log4j.additivity.FMI=false

#log4j.logger.ADV.AdvPortal=DEBUG, stderr
#log4j.additivity.ADV.AdvPortal=false

#log4j.logger.ADV.DocSignatures=DEBUG, stderr
#log4j.additivity.ADV.DocSignatures=false

log4j.logger.CSF=FATAL, stderr
log4j.additivity.CSF=false

#log4j.logger.ADV.Monitoring=DEBUG, stderr
#log4j.additivity.ADV.Monitoring=false

#log4j.logger.ADV.FWSGenericDocumentServices=DEBUG, stderr
#log4j.additivity.ADV.FWSGenericDocumentServices=false

#######################################################################
# Appender stderr is set to direct to the System.err output stream
# this allows the output to be viewed in the same place as all
# other messages generated by the system using System.err
#######################################################################
log4j.appender.stderr=org.apache.log4j.ConsoleAppender
log4j.appender.stderr.Target=System.err

#######################################################################
# Appender stderr uses PatternLayout to format the output
#######################################################################
log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
log4j.appender.stderr.layout.ConversionPattern=[%d] %c - %m%n

#######################################################################
# This example appender can be used to dump the logged messages into
# a rolling log file that can be configured to reach a certain max
# size. The previously logged data can be backed up.
#
# RollingLog uses the FileAppender which outputs to Processing.log
#log4j.appender.RollingLog=org.apache.log4j.RollingFileAppender
#log4j.appender.RollingLog.File=Processing.log
#log4j.appender.RollingLog.MaxFileSize=1000KB
#log4j.appender.RollingLog.MaxBackupIndex=9
# 
# RollingLog uses this PatternLayout to format the data
#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=%d [%t] %-5p %c %x - %m%n
#######################################################################
